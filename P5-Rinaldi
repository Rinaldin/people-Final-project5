//Project 5 by Nikoli Rinaldi
//CST 112 with professor BAM!


float horizon;
float hmin, hmax;
float wmin, wmax;

int a = 15;  //number of people

Person[] people = new Person[a];

void setup(){
  
  size(1000,800);
  
  horizon = height/1.5;
  
  //people sizes
  hmin = 100;      //the people's height and width follow a bell curve similar to real life
  hmax = 250;      //put what you would like to be the smallest and largest values the people can be
  wmin = 20;       //the people will most likely be directly between the two numbers
  wmax = 40;
  
  for(int n = 0; n < a; n++){
    people[n] = new Person();    //initializing people
    people[n].startup();
  }
}
  
void draw(){
  scene();
  show();
  messages();
}

void scene(){
  
  noStroke();
  
  rectMode(CORNER);
  fill(116,203,232);              //sky
  rect(0,0, width, horizon);
  
  fill(0,180,0);
  rect(0,horizon,width,height);  //ground
  
  fill(0);            //These lines represents minimum, median, and maximum shoulder heights in black 
  stroke(0,0,0,50);
  strokeWeight(1);
  for(int n = 0; n<3; n++){
    line(0, (horizon - hmin - (n * ((hmax - hmin)/2))), width, (horizon - hmin - (n * ((hmax - hmin)/2))));
  }
  
  stroke(255,0,0,50);         //These red lines roughly represent 1st and 3rd quartiles
  for(int n = 0; n<2; n++){
    line(0, (horizon - hmin - ((hmax - hmin)/4) - (n * ((hmax - hmin)/2))), width, (horizon - hmin - ((hmax - hmin)/4) - (n * ((hmax - hmin)/2))));
  }
  
}


void show(){

  for(int n = 0; n < a; n++){ 
    people[n].x = 50 + (n * 50);    //placing people
  }
  
  for(int n = 0; n < a; n++){       //showing people
    people[n].position();
    people[n].show();
  }
}


void keyPressed(){
  if (key == 'r'){
    for(int n = 0; n < a; n++){
      people[n].startup();
    }
  }
}


void messages(){
 textSize(20);
}


class Person{
  
  float r,g,b;     //colors
  float w1, w2;    //roll width
  float h1, h2;    //roll height
  float w,h;       //width and height
  float x,y;       //x and y position
  
  int feet, inches;
  int weight;
  
  void startup(){
    r = random(0,255);          //randomizing
    g = random(0,255);
    b = random(0,255);
    
    w1 = random(wmin/2,wmax/2);    //width and height can be adjusted in setup ^^
    w2 = random(wmin/2,wmax/2);    
    
    h1 = random(hmin/2,hmax/2);    
    h2 = random(hmin/2,hmax/2);
    
    w = w1 + w2;  //adding the random halves give a bell curve result
    h = h1 + h2;
    
    x = 100;
  }
  
  void position(){
    y = horizon - (h/2);  //y position
  }
  
  void body(){
    noStroke();
    fill(r,g,b);
    rectMode(CENTER);
    rect(x,y,w,h);      //body
    ellipse(x, (y - (h/2) - (h/6)), w, h/3);  //head
    
    fill(0);
    arc(x, (y - (h/2) - (h/6)), w/1.5, h/4, 0, PI, CHORD);  //mouth
    ellipse(x - w/4, (y - (h/2) - (h/4)), w/8, w/8);        //eyes
    ellipse(x + w/4, (y - (h/2) - (h/4)), w/8, w/8);
  }
  
  void show(){
    body();
    info();
    messages();
  }
  
  void info(){ 
    feet = int((h/12));      //height
    inches = int(h % 12);  
    
    weight = int(((2 * h) * w)/50);  //weight is more dependent on height then width, divided by a number to get a reasonable weight
  }
  
  void messages(){
    textSize(11);
    text(feet + "'" + inches + "''",x - w/2, y + h/2 + 20);
    text(weight + "lbs", x- w/2,  y + h/2 + 40);
  }
}
